    let Thresholds=datatable(MetricName: string, YellowThreshold: double, RedThreshold: double) [
        // Average time the message has spent on the event hub:
        "avgTimeSinceEnqueued", 200, 1000,
        // Failed processing attempts
        "failureCount", 3, 10,
        // Average duration of the processing in ms
        "avgProcessingTime", 100, 200
        ];
    //
    let timespanStart= todatetime(format_datetime(now(-2d), 'yyyy-MM-dd HH:ss')); // We need to remove any sub-second part from the start, otherwise the series are not to the seconds
    let timespanEnd = now(-2m); // there is some ingestion lag, so we account for this by stripping the last 2m
    // Calculate the number of exceptions
    let exceptions = AppExceptions
    | where AppRoleInstance startswith "BackgroundProcessor"
    | make-series Value=count() default=0 on TimeGenerated from timespanStart to timespanEnd step 1m
    | mv-expand TimeGenerated, Value
    | extend TimeGenerated = todatetime(TimeGenerated), Value=toreal(Value), MetricName='failureCount';
    // Calculate the average processing duration for each message
    let avgProcessDuration = AppRequests
    | where AppRoleInstance startswith "BackgroundProcessor"
    | where Name == "EventProcessor.Process"
    | make-series Value=avg(DurationMs) default=0 on TimeGenerated from timespanStart to timespanEnd step 1m
    | mv-expand TimeGenerated, Value
    | extend TimeGenerated = todatetime(TimeGenerated), Value=toreal(Value), MetricName='avgProcessingTime';
    // Calculate the average time since enqueued
    let avgTimeInQueue = AppRequests
    | where AppRoleInstance startswith "BackgroundProcessor"
    | where Name == "EventProcessor.Process"
    | extend timeSinceEnqueued = toint(parse_json(Measurements).timeSinceEnqueued) // Read time from json object into its own column
    | make-series Value=avg(timeSinceEnqueued) default=0 on TimeGenerated from timespanStart to timespanEnd step 1m
    | mv-expand TimeGenerated, Value
    | extend TimeGenerated = todatetime(TimeGenerated), Value=toreal(Value), MetricName='avgTimeSinceEnqueued';
    // Build final table
    avgProcessDuration
    | union avgTimeInQueue
    | union exceptions
    | lookup kind = inner Thresholds on MetricName
    | extend IsYellow = iff(todouble(Value) > YellowThreshold and todouble(Value) < RedThreshold, 1, 0)
    | extend IsRed = iff(todouble(Value) > RedThreshold, 1, 0)
    | project-reorder TimeGenerated, MetricName, Value, IsYellow, IsRed, YellowThreshold, RedThreshold
    | order by TimeGenerated, MetricName
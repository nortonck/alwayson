apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deploy
  labels:
    app: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: {{ .Values.scale.minReplicas | default 3 }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: backgroundprocessor
        image: {{ .Values.containerimage }}
        imagePullPolicy: {{ .Values.container.pullPolicy | default "Always" | quote }}
        securityContext:
          privileged: false # Running a container as privileged gives all capabilities to the container, and it also lifts all the limitations enforced by the device cgroup controller.
          readOnlyRootFilesystem: true # If a container does not need to write files, it should be run with a read-only filesystem.
          allowPrivilegeEscalation: false # Controls whether a process can gain more privileges than its parent process.
        livenessProbe:
        # For the liveness probe we check if the file exists and was modified in the last minute. Source: https://medium.com/spire-labs/utilizing-kubernetes-liveness-and-readiness-probes-to-automatically-recover-from-failure-2fe0314f2b2e
          exec:
            command:
            - find
            - /tmp/healthy
            - -mmin
            - '-1'
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: "0.5"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        env:
            - name: "AZURE_REGION" # This value only gets calculated at application deployment time so it does not exist in Key Vault as a secret (plus, it is not secret)
              value: {{ .Values.azure.region }}
            - name: "COSMOS_RETRY_WAIT_SEC"
              value: "90"
            - name: "COSMOS_MAX_RETRY_COUNT"
              value: "30"
            - name: DOCKER_HEALTHCHECK_FILEPATH
              value: "/tmp/healthy"
        volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true
          - name: tmp-volume
            mountPath: "/tmp"
          - name: var-log-volume
            mountPath: "/var/log"
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-kv
        - name: tmp-volume
          emptyDir: {}
        - name: var-log-volume
          emptyDir: {}